model Radial_MI
uses "mmxprs"; !gain access to the Xpress-Optimizer solver

parameters
	h = "2"  
	t = "1"
	w = "1"
	FILE_DATA =  "input-output-" + w + ".txt"
	k = 2
end-parameters

declarations
	
	s:integer
	m:integer
	n:integer
	
end-declarations

initializations from FILE_DATA
	s
	m
	n
end-initializations

declarations
	
	row1 = 1..m
	row2 = 1..s
	col = 1..n
	lamda: array( col ) of mpvar
	
	y_h:  array( row2,col ) of real
	x_h:  array( row1,col ) of real
	
	y_t:  array( row2,col ) of real
	x_t:  array( row1,col ) of real
	
	teta: mpvar
	
end-declarations

initializations from "mmsheet.xlsx:Input-Output-" + h + ".xlsx"
	y_h as "noindex;Output"+w
	x_h as "noindex;Input"+w
end-initializations

initializations from "mmsheet.xlsx:Input-Output-" + t + ".xlsx"
	y_t as "noindex;Output"+w
	x_t as "noindex;Input"+w
end-initializations

forall(j in row1) do
	teta * x_h(j,k) >= sum(i in col) x_t(j, i)*lamda(i)
end-do

forall(j in row1) do
	y_h(j,k) >= sum(i in col) y_t(j, i)*lamda(i)
end-do	

sum(i in col) lamda(i) = 1

forall(i in col) do
	lamda(i) >= 0
end-do
	
minimize(teta);

writeln(getsol(teta));

end-model
